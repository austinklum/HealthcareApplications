// <auto-generated />
using System;
using HealthcareApplications.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthcareApplications.Migrations
{
    [DbContext(typeof(PatientContext))]
    partial class PatientContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthcareApplications.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Drug");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhysicianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Physician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LicenseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Physician");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrescribedDrugId")
                        .HasColumnType("int");

                    b.Property<int?>("PrescribedPatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PrescribingPhysicianId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RefillCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PrescribedDrugId");

                    b.HasIndex("PrescribedPatientId");

                    b.HasIndex("PrescribingPhysicianId");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Patient", b =>
                {
                    b.HasOne("HealthcareApplications.Models.Physician", "Physician")
                        .WithMany("Patients")
                        .HasForeignKey("PhysicianId");

                    b.Navigation("Physician");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Prescription", b =>
                {
                    b.HasOne("HealthcareApplications.Models.Drug", "PrescribedDrug")
                        .WithMany()
                        .HasForeignKey("PrescribedDrugId");

                    b.HasOne("HealthcareApplications.Models.Patient", "PrescribedPatient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PrescribedPatientId");

                    b.HasOne("HealthcareApplications.Models.Physician", "PrescribingPhysician")
                        .WithMany()
                        .HasForeignKey("PrescribingPhysicianId");

                    b.Navigation("PrescribedDrug");

                    b.Navigation("PrescribedPatient");

                    b.Navigation("PrescribingPhysician");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("HealthcareApplications.Models.Physician", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
